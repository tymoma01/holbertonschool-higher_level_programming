Divide all elements of a matrix by a number

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Basic case
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Original matrix must remain unchanged
>>> m = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(m, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> m
[[1, 2, 3], [4, 5, 6]]

# Different row sizes -> TypeError
>>> matrix_divided([[100, 1, 10], [2, 1]], -2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

# Non-numeric element -> TypeError (NOTE: no trailing quote here)
>>> matrix_divided([[100, 1, 10], ["a", 2, 1]], -2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Division by zero
>>> matrix_divided([[100, 1, 10], [3, 2, 1]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

# div must be a number
>>> matrix_divided([[1, 2], [3, 4]], "2")
Traceback (most recent call last):
TypeError: div must be a number

# Matrix type validations
>>> matrix_divided("not a matrix", 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([1, 2, 3], 2)  # not a list of lists
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
